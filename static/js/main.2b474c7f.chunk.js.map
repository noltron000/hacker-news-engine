{"version":3,"sources":["react-logo.svg","components/Header.jsx","redux.js","components/Searchbar.jsx","components/History.jsx","components/Result.jsx","components/Results.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["Header","src","logo","className","alt","href","target","rel","activateSearch","search","reducers","combineReducers","state","action","type","store","initialState","createStore","configureStore","Searchbar","onSubmit","event","a","promise","fetch","query","preventDefault","response","json","results","queries","props","name","value","this","onChange","setState","Component","mapDispatchToProps","SearchbarContainer","connect","History","length","map","HistoryContainer","Result","author","points","signage","title","story_title","url","story_url","numComments","num_comments","date","Date","created_at","toLocaleDateString","Math","abs","Results","turnPage","page","slice","pop","exhaustiveNbHits","nbHits","NaN","processingTimeMS","hits","hit","nbPages","disabled","onClick","ResultsContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b474c7f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-logo.647fdf98.svg\";","// import styles & other objects\nimport logo from '../react-logo.svg'\nimport './Header.css'\n\nfunction Header() {\n\treturn (\n\t\t<header>\n\t\t\t<img\n\t\t\t\tsrc={logo}\n\t\t\t\tclassName=\"logo\"\n\t\t\t\talt=\"logo\"\n\t\t\t/>\n\n\t\t\t<div className=\"title\">\n\t\t\t\t<h1 className=\"center\">\n\t\t\t\t\tHacker News Engine\n\t\t\t\t</h1>\n\t\t\t\t<p>\n\t\t\t\t\tBuilt with React, Redux, and the Algolia API.\n\t\t\t\t\t<br />\n\t\t\t\t\tFor more details,\n\t\t\t\t\t{\" \"}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://github.com/noltron000/hacker-news-engine\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\tview this project on Github\n\t\t\t\t\t</a>\n\t\t\t\t\t{\".\"}\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</header>\n\t)\n}\n\nexport default Header\n","import {\n\tcombineReducers,\n\tcreateStore,\n} from 'redux'\n\n\n/* ACTIONS */\n// check this out when the search bar is clicked.\nconst activateSearch = (search) => {\n\t// create action object with a type label and its content.\n\tconst actionObject = {\n\t\t'type': 'ACTIVATE_SEARCH',\n\t\t'search': search,\n\t}\n\n\t// that's all we need.\n\treturn actionObject\n}\n\n\n/* REDUCERS */\n// bindle all possible actions for the search.\nconst search = (\n\t// 'state' param has a nice default object set up.\n\tstate = {'queries': [ ], 'results': { }},\n\t// 'action' param won't get hit if it isn't used.\n\taction\n) => {\n\n\t// there's only one possible action type for queries.\n\tif (action?.type === 'ACTIVATE_SEARCH') {\n\t\treturn action.search\n\t}\n\n\t// if there's no matching labels, do nothing extra.\n\telse {\n\t\treturn state\n\t}\n}\n\n// bundle together all reducers.\nconst reducers = combineReducers({search})\n\n\n/* STORE */\n// we're required to use a verbose f(x) behind the scenes.\n// verbose meaning, we use the 'function' keyword.\nfunction configureStore(initialState = {}) {\n\tconst store = createStore(reducers, initialState)\n\treturn store\n}\n\n// bundle up together the store\nconst store = configureStore()\n\n\n/* EXPORT */\nexport {\n\tactivateSearch,\n\tsearch,\n\treducers,\n\tconfigureStore,\n\tstore\n}\n","// import styles & other objects\nimport {connect} from 'react-redux'\nimport {activateSearch} from '../redux.js'\n// import react components\nimport {Component} from 'react'\n\n/* CREATE BASE CLASS */\nclass Searchbar extends Component {\n\tconstructor () {\n\t\tsuper()\n\t\tthis.state = {'query': ''}\n\t}\n\n\trender () { return (<>\n\t\t<form\n\t\t\tonSubmit={async (event) => {\n\t\t\t\t// fetch some stuff from the API.\n\t\t\t\t// its going to be a promise, so we'll await it later.\n\t\t\t\tconst promise = fetch(`https://hn.algolia.com/api/v1/search?query=${this.state.query}`)\n\n\t\t\t\t// don't allow the site to reload after submitting.\n\t\t\t\tevent.preventDefault()\n\n\t\t\t\t// re-visit promises and await completion.\n\t\t\t\tconst response = await promise\n\t\t\t\tconst results = await response.json()\n\n\t\t\t\t// add current query to redux history.\n\t\t\t\tconst queries = [...this.props.search.queries, this.state.query]\n\n\t\t\t\t// tell redux that we have new search data.\n\t\t\t\tthis.props.activateSearch({\n\t\t\t\t\t// 'queries' is historic array of query entries.\n\t\t\t\t\t// the most recent query is listed at the end.\n\t\t\t\t\t'queries': queries,\n\t\t\t\t\t// 'results' is fetched data for this query.\n\t\t\t\t\t'results': results,\n\t\t\t\t})\n\t\t\t}}\n\t\t>\n\n\t\t\t{/* Here is the searchbar's HTML. */}\n\t\t\t<div>\n\t\t\t\t<label>\n\t\t\t\t\tSearch Hacker News\n\t\t\t\t</label>\n\n\t\t\t\t<br />\n\n\t\t\t\t<input\n\t\t\t\t\tname=\"searchbar\"\n\t\t\t\t\ttype=\"search\"\n\t\t\t\t\tvalue={this.state.query}\n\n\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t'query': event.target.value\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t<input\n\t\t\t\t\tname=\"searchButton\"\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tvalue=\"Search\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</form>\n\t</>)}\n}\n\n/* EXTEND OBJECT INTO REDUX CONTAINER */\nconst mapStateToProps = (state) => {\n\t// create props from state\n\tconst props = {\n  \tsearch: state.search,\n\t}\n\n\t// return props\n\treturn props\n}\n\nconst mapDispatchToProps = {\n\t// \"dispatch\" bundled functions to incoming class context.\n  activateSearch,\n}\n\nconst SearchbarContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Searchbar)\n\n// new redux container replaces the base class.\n// it has all the base class functionality and more.\nexport default SearchbarContainer\n","// import styles & other objects\nimport {connect} from 'react-redux'\n// import react components\nimport {Component} from 'react'\n\n/* CREATE BASE CLASS */\nclass History extends Component {\n\trender () {\n\t\tif (this.props.search.queries.length === 0) {\n\t\t\treturn < ></>\n\t\t}\n\t\t// else {}\n\t\treturn (<>\n\t\t\t<hr />\n\t\t\t<section>\n\t\t\t\t<h2>Search History</h2>\n\t\t\t\t<ul>\n\t\t\t\t\t{this.props.search.queries.map((query) => (\n\t\t\t\t\t\t<li key={query}>{query}</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</>)\n\t}\n}\n\n/* EXTEND OBJECT INTO REDUX CONTAINER */\nconst mapStateToProps = (state) => {\n\t// create props from state\n\tconst props = {\n  \tsearch: state.search,\n\t}\n\n\t// return props\n\treturn props\n}\n\nconst HistoryContainer = connect(\n  mapStateToProps\n)(History)\n\nexport default HistoryContainer\n","// 'Result' is a simple functional component.\nconst Result = ({props}) => {\n\t// deconstruct props.\n\tconst author = props.author\n\tconst points = props.points || 0\n\tconst signage = points >= 0 ? '+' : '–'\n\tconst title = props.title || props.story_title\n\tconst url = props.url || props.story_url\n\tconst numComments = props.num_comments || 0\n\t// convert date to readable string.\n\tconst date = (new Date(props.created_at)).toLocaleDateString()\n\n\treturn (\n\t\t<div className='result'>\n\t\t\t<h3>\n\t\t\t\t<span className='points'>\n\t\t\t\t\t{signage}\n\t\t\t\t\t{Math.abs(points)}\n\t\t\t\t</span>\n\t\t\t\t<a href={url}>{title}</a>\n\t\t\t</h3>\n\t\t\t<p>\n\t\t\t\t<span>\n\t\t\t\t\t{'posted by '}\n\t\t\t\t\t<u>{author}</u>\n\t\t\t\t\t{' on '}\n\t\t\t\t\t{date}\n\t\t\t\t\t{' | '}\n\t\t\t\t\t{numComments}\n\t\t\t\t\t{' comments'}\n\t\t\t\t</span>\n\t\t\t</p>\n\t\t</div>\n\t)\n}\n\nexport default Result\n","// import styles & other objects\nimport {connect} from 'react-redux'\nimport {activateSearch} from '../redux.js'\n// import react components\nimport {Component} from 'react'\nimport Result from './Result'\n\n\n/* CREATE BASE CLASS */\nclass Results extends Component {\n\tturnPage = async (page) => {\n\t\tconst query = this.props.search.queries.slice(-1).pop()\n\t\tconst queries = this.props.search.queries\n\n\t\t// fetch some stuff from the API using the proper page number.\n\t\t// its going to be a promise, so we'll await them.\n\t\tconst promise = fetch(`https://hn.algolia.com/api/v1/search?query=${query}&page=${page}`)\n\t\tconst response = await promise\n\t\tconst results = await response.json()\n\n\t\t// tell redux that we have new search data.\n\t\tthis.props.activateSearch({\n\t\t\t// 'results' is fetched data for this query.\n\t\t\t'results': results,\n\t\t\t'queries': queries,\n\t\t})\n\t}\n\n\trender () {\n\t\tif (this.props.search.queries.length === 0) {\n\t\t\treturn < ></>\n\t\t}\n\t\t// else {}\n\t\treturn (\n\t\t\t<section>\n\t\t\t\t<hr />\n\t\t\t\t<h2>\n\t\t\t\t\tSearch Results\n\t\t\t\t</h2>\n\t\t\t\t<p>\n\t\t\t\t\t{/*\n\t\t\t\t\t\tThis paragraph string results in something like this:\n\t\t\t\t\t\t\"Found (exactly/more than) (####) result(s) in (####) seconds.\"\n\t\t\t\t\t*/}\n\t\t\t\t\t{'Found '}\n\t\t\t\t\t{this.props.search.results.exhaustiveNbHits ? 'exactly ' : 'more than '}\n\t\t\t\t\t{this.props.search.results.nbHits ?? NaN}\n\t\t\t\t\t{' result'}\n\t\t\t\t\t{/* make result(s) singular or plural */}\n\t\t\t\t\t{this.props.search.results.nbHits + 1 === 1 ? 's' : ''}\n\t\t\t\t\t{' in '}\n\t\t\t\t\t{this.props.search.results.processingTimeMS / 1000}\n\t\t\t\t\t{' seconds.'}\n\t\t\t\t</p>\n\n\n\t\t\t\t{/* For each search result, create a component. */}\n\t\t\t\t{(this.props.search.results.hits ?? [ ]).map((hit) => (\n\t\t\t\t\t<Result props={hit}/>\n\t\t\t\t))}\n\n\n\t\t\t\t{/* Create a navigator tool after the list of results. */}\n\t\t\t\t<p>\n\t\t\t\t\tPage {this.props.search.results.page + 1} of {this.props.search.results.nbPages}\n\t\t\t\t\t<br />\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tvalue=\"Previous Page\"\n\t\t\t\t\t\tdisabled={this.props.search.results.page + 1 <= 1}\n\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\tawait this.turnPage(this.props.search.results.page - 1)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{\" | \"}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tvalue=\"Next Page\"\n\t\t\t\t\t\tdisabled={this.props.search.results.page + 1 >= this.props.search.results.nbPages}\n\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\tawait this.turnPage(this.props.search.results.page + 1)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</p>\n\t\t\t</section>\n\t\t)\n\t}\n}\n\n\n/* EXTEND OBJECT INTO REDUX CONTAINER */\nconst mapStateToProps = (state) => {\n\t// create props from state\n\tconst props = {\n  \tsearch: state.search,\n\t}\n\n\t// return props\n\treturn props\n}\n\nconst mapDispatchToProps = {\n\t// \"dispatch\" bundled functions to incoming class context.\n  activateSearch,\n}\n\nconst ResultsContainer = connect(\n  mapStateToProps,\n\tmapDispatchToProps,\n)(Results)\n\nexport default ResultsContainer\n","// import styles & other objects\nimport './App.css'\n// import react components\nimport {Component} from 'react'\nimport Header from './Header'\nimport Searchbar from './Searchbar'\nimport History from './History'\nimport Results from './Results'\n\nclass App extends Component {\n\trender () {return (\n\t\t<>\n\t\t\t<main>\n\t\t\t\t<Header />\n\t\t\t</main>\n\t\t\t<div className = 'content'>\n\t\t\t\t<Searchbar />\n\t\t\t\t<History />\n\t\t\t\t<Results />\n\t\t\t</div>\n\t\t</>\n\t)}\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport './index.css'\nimport App from './components/App'\nimport {store} from './redux'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>\n\t</Provider>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}